// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Red.Infrastructure.Persistence;

namespace Red.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Red.Core.Domain.Models.SwitchGame", b =>
                {
                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AgeRating")
                        .HasColumnType("int");

                    b.Property<float?>("AllTimeHigh")
                        .HasColumnType("real");

                    b.Property<float?>("AllTimeLow")
                        .HasColumnType("real");

                    b.Property<string>("Categories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Coop")
                        .HasColumnType("bit");

                    b.Property<string>("Cover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DemoAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Developer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DownloadSize")
                        .HasColumnType("int");

                    b.Property<string>("Languages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxPlayers")
                        .HasColumnType("int");

                    b.Property<int?>("MinPlayers")
                        .HasColumnType("int");

                    b.Property<string>("Nsuids")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayModes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Popularity")
                        .HasColumnType("int");

                    b.Property<string>("PriceHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("RegularPrice")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("RemovedFromEshop")
                        .HasColumnType("bit");

                    b.Property<string>("Screenshots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("SupportsCloudSave")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("VoucherPossible")
                        .HasColumnType("bit");

                    b.HasKey("ProductCode", "Region")
                        .HasName("PK_SwitchGame_ProductCodeRegion");

                    b.HasIndex("ProductCode")
                        .IsUnique()
                        .HasDatabaseName("IX_SwitchGameProductCode");

                    b.HasIndex("Slug")
                        .HasDatabaseName("IX_SwitchGameSlug");

                    b.HasIndex("Title")
                        .HasDatabaseName("IX_SwitchGameTitle");

                    b.ToTable("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
